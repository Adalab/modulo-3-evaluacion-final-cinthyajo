{"ast":null,"code":"//Los datos del API los guardamos en un fichero dentro carpeta services.\nconst getApiData = () => {\n  //Llamar al API con un fetch\n  return fetch(\"https://rickandmortyapi.com/documentation/#get-all-characters\") //Me convierte los datos a json\n  .then(response => response.json()).then(data => {\n    //creo una variable que será igual a un array. Lo voy a iterar con un map y nos devolverá un array con datos modificados.\n    //(user) son los usuarios de uno en uno. El resultado de map me lo guarda en cleanData.\n    const cleanData = data.results.map(character => {\n      return {\n        image: character.image,\n        name: character.name,\n        species: character.species\n      };\n    });\n    console.log(data);\n    return cleanData;\n  });\n}; //En al Api lo que retorno como cleanData, lo recibo en App como usersData\n//Entre funciones no viajan variables, sí el contenido de las variables.\n//Exporto un objeto, un array o una función como aquí.\n\n\nexport default getApiData;","map":{"version":3,"sources":["/Users/cinthyajovillalobos/Documents/adalab-promo M/evaluaciones.adalab.promoM/modulo-3-evaluacion-final-cinthyajo/modulo-3-evaluacion-final-cinthyajo/src/services/api.js"],"names":["getApiData","fetch","then","response","json","data","cleanData","results","map","character","image","name","species","console","log"],"mappings":"AAAA;AAEA,MAAMA,UAAU,GAAG,MAAM;AACvB;AACA,SACEC,KAAK,CAAC,+DAAD,CAAL,CACE;AADF,GAEGC,IAFH,CAESC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAFtB,EAGGF,IAHH,CAGSG,IAAD,IAAU;AACd;AAEA;AACA,UAAMC,SAAS,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AAChD,aAAO;AACLC,QAAAA,KAAK,EAAED,SAAS,CAACC,KADZ;AAELC,QAAAA,IAAI,EAAEF,SAAS,CAACE,IAFX;AAGLC,QAAAA,OAAO,EAAEH,SAAS,CAACG;AAHd,OAAP;AAKD,KANiB,CAAlB;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,WAAOC,SAAP;AACD,GAjBH,CADF;AAoBD,CAtBD,C,CAwBA;AACA;AAEA;;;AACA,eAAeN,UAAf","sourcesContent":["//Los datos del API los guardamos en un fichero dentro carpeta services.\n\nconst getApiData = () => {\n  //Llamar al API con un fetch\n  return (\n    fetch(\"https://rickandmortyapi.com/documentation/#get-all-characters\")\n      //Me convierte los datos a json\n      .then((response) => response.json())\n      .then((data) => {\n        //creo una variable que será igual a un array. Lo voy a iterar con un map y nos devolverá un array con datos modificados.\n\n        //(user) son los usuarios de uno en uno. El resultado de map me lo guarda en cleanData.\n        const cleanData = data.results.map((character) => {\n          return {\n            image: character.image,\n            name: character.name,\n            species: character.species,\n          };\n        });\n\n        console.log(data);\n        return cleanData;\n      })\n  );\n};\n\n//En al Api lo que retorno como cleanData, lo recibo en App como usersData\n//Entre funciones no viajan variables, sí el contenido de las variables.\n\n//Exporto un objeto, un array o una función como aquí.\nexport default getApiData;\n"]},"metadata":{},"sourceType":"module"}