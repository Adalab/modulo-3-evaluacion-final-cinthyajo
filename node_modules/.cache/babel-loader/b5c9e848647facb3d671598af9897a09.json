{"ast":null,"code":"//Creo este módulo que me retornará 2 funciones: una de get (leer en el ls) y otra de set (guardar en el ls)\n//Estas funciones deben recibir datos en general. En el local storage esa información funciona teniendo una key y un valor.\n//En el get únicamente recibo una key no el value\nconst get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n}; //Este siempre es guardo en el local storage con una key y un valor.\n//JSON.stringify siempre va porque guardo datos complejos que al ser un array en este caso entonces coloco el stringify\n\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objToExport = {\n  get: get,\n  set: set\n}; //exporto estos datos que para mí son un objeto entonces exporto get como get y set como set\n//Estos objetos tienen c/u una función get y set\n\nexport default objToExport;","map":{"version":3,"sources":["/Users/cinthyajovillalobos/Documents/adalab-promo M/evaluaciones.adalab.promoM/modulo-3-evaluacion-final-cinthyajo/modulo-3-evaluacion-final-cinthyajo/src/services/local-storage.js"],"names":["get","key","defaultData","data","localStorage","getItem","JSON","parse","set","value","setItem","stringify","objToExport"],"mappings":"AAAA;AAEA;AACA;AAEA,MAAMA,GAAG,GAAG,CAACC,GAAD,EAAMC,WAAN,KAAsB;AAChC,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAb;;AACA,MAAIE,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAOD,WAAP;AACD,GAFD,MAEO;AACL,WAAOI,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACD;AACF,CAPD,C,CASA;AACA;;;AAEA,MAAMK,GAAG,GAAG,CAACP,GAAD,EAAMQ,KAAN,KAAgB;AAC1BL,EAAAA,YAAY,CAACM,OAAb,CAAqBT,GAArB,EAA0BK,IAAI,CAACK,SAAL,CAAeF,KAAf,CAA1B;AACD,CAFD;;AAIA,MAAMG,WAAW,GAAG;AAClBZ,EAAAA,GAAG,EAAEA,GADa;AAElBQ,EAAAA,GAAG,EAAEA;AAFa,CAApB,C,CAKA;AACA;;AAEA,eAAeI,WAAf","sourcesContent":["//Creo este módulo que me retornará 2 funciones: una de get (leer en el ls) y otra de set (guardar en el ls)\n\n//Estas funciones deben recibir datos en general. En el local storage esa información funciona teniendo una key y un valor.\n//En el get únicamente recibo una key no el value\n\nconst get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\n//Este siempre es guardo en el local storage con una key y un valor.\n//JSON.stringify siempre va porque guardo datos complejos que al ser un array en este caso entonces coloco el stringify\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objToExport = {\n  get: get,\n  set: set,\n};\n\n//exporto estos datos que para mí son un objeto entonces exporto get como get y set como set\n//Estos objetos tienen c/u una función get y set\n\nexport default objToExport;\n"]},"metadata":{},"sourceType":"module"}