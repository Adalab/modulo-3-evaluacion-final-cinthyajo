{"version":3,"sources":["components/CharacterDetail.js","components/CharacterCard.js","components/CharacterList.js","components/FilterByName.js","components/Filters.js","services/api.js","components/Header.js","services/local-storage.js","components/App.js","index.js"],"names":["CharacterDetail","props","className","to","foundCharacter","name","src","image","alt","status","showStatus","species","origin","episode","CharacterCard","id","title","CharacterList","characterElements","characters","map","character","FilterByName","htmlFor","type","placeholder","value","filterName","onChange","ev","handleFilter","target","key","Filters","onSubmit","preventDefault","getApiData","fetch","then","response","json","data","results","episodes","Header","objToExport","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","setCharacters","setFilterName","useEffect","length","charactersData","ls","filteredCharacters","filter","toLowerCase","includes","exact","path","render","routeCharacterId","parseInt","match","params","characterId","find","undefined","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de7ee178.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheet/CharacterDetail.scss\";\n\nconst CharacterDetail = (props) => {\n  const showStatus = () => {\n    if (props.foundCharacter.status === \"Dead\") {\n      return \"💀\";\n    }\n  };\n  return (\n    <div>\n      <Link className=\"backLink\" to=\"/\">\n        {\" \"}\n        Go back\n      </Link>\n      <header>\n        <h2 className=\"headerDetail\">{props.foundCharacter.name}</h2>\n      </header>\n      <section>\n        <img\n          className=\"imgDetail\"\n          src={props.foundCharacter.image}\n          alt={props.foundCharacter.name}\n        />\n        <span>{showStatus()}</span>\n        <ul className=\"listContainer\">\n          <li>Species: {props.foundCharacter.species}</li>\n          <li>Origin: {props.foundCharacter.origin.name}</li>\n          <li>Episodes: {props.foundCharacter.episode}</li>\n          <li>Status: {props.foundCharacter.status}</li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nCharacterDetail.propTypes = {\n  foundCharacter: PropTypes.object.isRequired,\n};\nexport default CharacterDetail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheet/CharacterCard.scss\";\n\nconst CharacterCard = (props) => {\n  return (\n    <li>\n      <article className=\"card\">\n        <Link className=\"link\" to={`/character/${props.id}`}>\n          <img\n            className=\"cardImg\"\n            src={props.image}\n            alt={`Tarjeta de ${props.name}`}\n            title={`Tarjeta de ${props.name}`}\n          />\n        </Link>\n        <h4 className=\"cardTitle\">{props.name}</h4>\n        <p className=\"cardDescription\">{props.species}</p>\n      </article>\n    </li>\n  );\n};\n\nCharacterCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CharacterCard from \"./CharacterCard\";\n\nconst CharacterList = (props) => {\n  const characterElements = props.characters.map((character) => {\n    return (\n      <CharacterCard\n        name={character.name}\n        species={character.species}\n        image={character.image}\n        id={character.id}\n      />\n    );\n  });\n\n  return (\n    <section className=\"cards\">\n      <ul>{characterElements}</ul>\n    </section>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.string.isRequired,\n};\nexport default CharacterList;\n","import React from \"react\";\nimport \"../stylesheet/FilterByName.scss\";\n\nconst FilterByName = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: \"name\",\n    });\n  };\n  return (\n    <section className=\"formSection\">\n      <label className=\"formLabel\" htmlFor=\"name\"></label>\n      <input\n        className=\"formInput\"\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        placeholder=\"Name of the character\"\n        value={props.filterName}\n        onChange={handleChange}\n      />\n    </section>\n  );\n};\n\nexport default FilterByName;\n","import React from \"react\";\nimport FilterByName from \"./FilterByName\";\n\nconst Filters = (props) => {\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <FilterByName\n          filterName={props.filterName}\n          handleFilter={props.handleFilter}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Filters;\n","//Los datos del API los guardamos en un fichero dentro carpeta services.\n\nconst getApiData = () => {\n  //Llamar al API con un fetch\n  return (\n    fetch(\"//rickandmortyapi.com/api/character/\")\n      //Me convierte los datos a json\n      .then((response) => response.json())\n      .then((data) => {\n        //creo una variable que será igual a un array. Lo voy a iterar con un map y nos devolverá un array con datos modificados.\n\n        //(user) son los usuarios de uno en uno. El resultado de map me lo guarda en cleanData.\n        const cleanData = data.results.map((character) => {\n          return {\n            image: character.image,\n            name: character.name,\n            species: character.species,\n            origin: character.origin,\n            status: character.status,\n            episodes: character.episode,\n            id: character.id,\n          };\n        });\n\n        return cleanData;\n      })\n  );\n};\n\n//En al Api lo que retorno como cleanData, lo recibo en App como usersData\n//Entre funciones no viajan variables, sí el contenido de las variables.\n\n//Exporto un objeto, un array o una función como aquí.\nexport default getApiData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../stylesheet/Header.scss\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\">\n        <img\n          className=\"logo\"\n          src=\"https://help.redbubble.com/hc/article_attachments/360002309526/Rick_and_Morty_-_logo__English_.png\"\n          alt=\"Rick and Morty\"\n        />\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","//Creo este módulo que me retornará 2 funciones: una de get (leer en el ls) y otra de set (guardar en el ls)\n\n//Estas funciones deben recibir datos en general. En el local storage esa información funciona teniendo una key y un valor.\n//En el get únicamente recibo una key no el value\n\nconst get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\n//Este siempre es guardo en el local storage con una key y un valor.\n//JSON.stringify siempre va porque guardo datos complejos que al ser un array en este caso entonces coloco el stringify\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objToExport = {\n  get: get,\n  set: set,\n};\n\n//exporto estos datos que para mí son un objeto entonces exporto get como get y set como set\n//Estos objetos tienen c/u una función get y set\n\nexport default objToExport;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport getApiData from \"../services/api\";\nimport Header from \"./Header\";\nimport \"../stylesheet/App.scss\";\nimport ls from \"../services/local-storage\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState(\"\");\n\n  //Call API with useEffect hook\n  useEffect(() => {\n    if (characters.length === 0) {\n      getApiData().then((charactersData) => {\n        setCharacters(charactersData);\n      });\n    }\n  }, []);\n\n  //Local storage: set characters\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  //Function: filter characters\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toLowerCase().includes(filterName.toLowerCase());\n  });\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    }\n  };\n\n  //Function: looking for characters\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n\n    const foundCharacter = characters.find((character) => {\n      return character.id === routeCharacterId;\n    });\n\n    if (foundCharacter !== undefined) {\n      return <CharacterDetail foundCharacter={foundCharacter} />;\n    } else {\n      return <p>Character not found</p>;\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"divContainer\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters filterName={filterName} handleFilter={handleFilter} />\n            {filteredCharacters.length === 0 ? (\n              <p className=\"noText\">\n                No hay personajes que coincidan con la búsqueda\n              </p>\n            ) : (\n              <CharacterList characters={filteredCharacters} />\n            )}\n          </Route>\n          <Route\n            path=\"/character/:characterId\"\n            render={renderCharacterDetail}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./stylesheet/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}