{"version":3,"sources":["images/logo.png","components/CharacterCard.js","components/CharacterList.js","services/api.js","services/local-storage.js","components/App.js","index.js"],"names":["CharacterCard","props","className","src","image","alt","name","title","species","CharacterList","characterElements","characters","map","character","id","getApiData","fetch","then","response","json","data","results","objToExport","get","key","defaultData","localStorage","getItem","JSON","parse","set","value","setItem","stringify","App","useState","ls","setCharacters","useEffect","length","charactersData","filteredCharacters","logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAAe,MAA0B,iC,OCoB1BA,EAjBO,SAACC,GACrB,OACE,6BACE,0BAASC,UAAU,OAAnB,UACE,qBACEA,UAAU,YACVC,IAAKF,EAAMG,MACXC,IAAG,kBAAaJ,EAAMK,MACtBC,MAAK,kBAAaN,EAAMK,QAE1B,oBAAIJ,UAAU,cAAd,SAA6BD,EAAMK,OACnC,mBAAGJ,UAAU,oBAAb,SAAkCD,EAAMO,gBCWjCC,EApBO,SAACR,GACrB,IAAMS,EAAoBT,EAAMU,WAAWC,KAAI,SAACC,GAE9C,OACE,cAAC,EAAD,CACEP,KAAMO,EAAUP,KAChBE,QAASK,EAAUL,QACnBJ,MAAOS,EAAUT,OACZS,EAAUC,OAKrB,OACE,kCACE,oBAAIZ,UAAU,QAAd,SAAuBQ,OCUdK,EA5BI,WAEjB,OACEC,MAAM,8CAEHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAaL,OATkBA,EAAKC,QAAQT,KAAI,SAACC,GAClC,MAAO,CACLT,MAAOS,EAAUT,MACjBE,KAAMO,EAAUP,KAChBE,QAASK,EAAUL,QACnBM,GAAID,EAAUC,WCYXQ,EARK,CAClBC,IAjBU,SAACC,EAAKC,GAChB,IAAML,EAAOM,aAAaC,QAAQH,GAClC,OAAa,OAATJ,EACKK,EAEAG,KAAKC,MAAMT,IAapBU,IANU,SAACN,EAAKO,GAChBL,aAAaM,QAAQR,EAAKI,KAAKK,UAAUF,MCe5BG,EA3BH,WACV,MAAoCC,mBAASC,EAAGb,IAAI,aAAc,KAAlE,mBAAOZ,EAAP,KAAmB0B,EAAnB,KAEAC,qBAAU,WACkB,IAAtB3B,EAAW4B,QACbxB,IAAaE,MAAK,SAACuB,GACjBH,EAAcG,QAGjB,IAEHF,qBAAU,WACRF,EAAGN,IAAI,aAAcnB,KACpB,CAACA,IAEJ,IAAM8B,EAAqB9B,EAE3B,OACE,qCACE,qBAAKR,IAAKuC,EAAMrC,IAAI,mBACpB,8BACE,cAAC,EAAD,CAAeM,WAAY8B,UCtBnCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.986e21a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9d64fca1.png\";","import React from \"react\";\n\n//componente UserList usa el componente User que pinta el card con los datos dentro del <article>\nconst CharacterCard = (props) => {\n  return (\n    <li>\n      <article className=\"card\">\n        <img\n          className=\"card__img\"\n          src={props.image}\n          alt={`Foto de ${props.name}`}\n          title={`Foto de ${props.name}`}\n        />\n        <h4 className=\"card__title\">{props.name}</h4>\n        <p className=\"card__description\">{props.species}</p>\n      </article>\n    </li>\n  );\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\n\n//es un map de pintar datos, recibe por props el listado de usuarios (props.users.map), los mapea y los pinta (return)\n//Almaceno el return del map en la constante userElements y luego pinto esa constante en el <ul> {userElements}\nconst CharacterList = (props) => {\n  const characterElements = props.characters.map((character) => {\n    //está retornando una parte del html que es el componente CharacterCard\n    return (\n      <CharacterCard\n        name={character.name}\n        species={character.species}\n        image={character.image}\n        key={character.id}\n      />\n    );\n  });\n\n  return (\n    <section>\n      <ul className=\"cards\">{characterElements}</ul>\n    </section>\n  );\n};\n\nexport default CharacterList;\n","//Los datos del API los guardamos en un fichero dentro carpeta services.\n\nconst getApiData = () => {\n  //Llamar al API con un fetch\n  return (\n    fetch(\"https://rickandmortyapi.com/api/character/\")\n      //Me convierte los datos a json\n      .then((response) => response.json())\n      .then((data) => {\n        //creo una variable que será igual a un array. Lo voy a iterar con un map y nos devolverá un array con datos modificados.\n\n        //(user) son los usuarios de uno en uno. El resultado de map me lo guarda en cleanData.\n        const cleanData = data.results.map((character) => {\n          return {\n            image: character.image,\n            name: character.name,\n            species: character.species,\n            id: character.id,\n          };\n        });\n\n        return cleanData;\n      })\n  );\n};\n\n//En al Api lo que retorno como cleanData, lo recibo en App como usersData\n//Entre funciones no viajan variables, sí el contenido de las variables.\n\n//Exporto un objeto, un array o una función como aquí.\nexport default getApiData;\n","//Creo este módulo que me retornará 2 funciones: una de get (leer en el ls) y otra de set (guardar en el ls)\n\n//Estas funciones deben recibir datos en general. En el local storage esa información funciona teniendo una key y un valor.\n//En el get únicamente recibo una key no el value\n\nconst get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\n//Este siempre es guardo en el local storage con una key y un valor.\n//JSON.stringify siempre va porque guardo datos complejos que al ser un array en este caso entonces coloco el stringify\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objToExport = {\n  get: get,\n  set: set,\n};\n\n//exporto estos datos que para mí son un objeto entonces exporto get como get y set como set\n//Estos objetos tienen c/u una función get y set\n\nexport default objToExport;\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"../images/logo.png\";\nimport CharacterList from \"./CharacterList\";\nimport getApiData from \"../services/api\";\nimport ls from \"../services/local-storage\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState(ls.get(\"characters\", []));\n\n  useEffect(() => {\n    if (characters.length === 0) {\n      getApiData().then((charactersData) => {\n        setCharacters(charactersData);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  const filteredCharacters = characters;\n\n  return (\n    <>\n      <img src={logo} alt=\"Rick and Morty\" />\n      <div>\n        <CharacterList characters={filteredCharacters} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheet/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}